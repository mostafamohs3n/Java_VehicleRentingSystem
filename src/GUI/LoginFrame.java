package GUI;

import Code.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;


public class LoginFrame {

    public JFrame frame = new JFrame();


    private JPanel mainLoginPanel;
    private JPanel PanelBtns;
    private JPanel myPanelBtn;
    private JButton adminBtn;
    private JButton empBtn;
    private JPanel formPanel;
    private JTextField LoginTextFieldUsername;
    private JPasswordField LoginTextFieldPassword;


    private JLabel loggedinAsLabel;
    private JButton LoginBtn;
    private JPanel Footer;
    private Color NormalBtnBg = new Color(-16758415);
    private Color NormalBtnTxt = new Color(-328966);
    private Color VisitedBtnBg = new Color(-1118482);
    private Color VisitedBtnTxt = new Color(-16758415);
    public static boolean isAdmin = true;

    private void switchPanelBtns(JButton clicked, JButton normal) {
        //if (isAdmin == true && clicked == adminBtn) return;
        //if (isAdmin == false && clicked == empBtn) return;
        normal.setBackground(NormalBtnBg);
        normal.setForeground(NormalBtnTxt);
        clicked.setBackground(VisitedBtnBg);
        clicked.setForeground(VisitedBtnTxt);
        isAdmin = (clicked == adminBtn ? true : false);
        loggedinAsLabel.setText("Logging in as " + (isAdmin ? "Administrator" : "Employee"));
    }

    public LoginFrame() {
        frame.setSize(900, 600); //location, size
        frame.setContentPane(this.$$$getRootComponent$$$());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);

        adminBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switchPanelBtns(adminBtn, empBtn);
            }
        });
        empBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                switchPanelBtns(empBtn, adminBtn);
            }
        });
        adminBtn.doClick();
        adminBtn.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                adminBtn.setBackground(VisitedBtnBg);
            }
        });
        empBtn.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                adminBtn.setBackground(VisitedBtnTxt);
            }
        });
        /**Login**/

        LoginBtn.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame Dashboard = new JFrame();
                System.out.println("Logging in");
                boolean Logged = new Auth().Login(isAdmin, LoginTextFieldUsername.getText(), LoginTextFieldPassword.getText());
                if (isAdmin) {
                    if (Logged)
                        Dashboard.setContentPane(new AdminFrame().$$$getRootComponent$$$());
                } else {
                    if (Logged)
                        Dashboard.setContentPane(new EmployeeFrame().$$$getRootComponent$$$());
                }
                if (!Logged) {
                    JOptionPane.showMessageDialog(frame, "Username or Password doesn\'t exist", "Failed to login", JOptionPane.ERROR_MESSAGE);
                } else {
                    frame.setVisible(false);
                    Dashboard.setSize(900, 600);
                    Dashboard.setVisible(true);
                }
            }
        });
        /**Simulate Button click on pressing Enter**/
        LoginTextFieldPassword.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                LoginBtn.doClick();
            }
        });
        LoginTextFieldUsername.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                LoginBtn.doClick();
            }
        });
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainLoginPanel = new JPanel();
        mainLoginPanel.setLayout(new BorderLayout(0, 0));
        PanelBtns = new JPanel();
        PanelBtns.setLayout(new FlowLayout(FlowLayout.RIGHT, 0, 0));
        PanelBtns.setBackground(new Color(-11551010));
        mainLoginPanel.add(PanelBtns, BorderLayout.NORTH);
        myPanelBtn = new JPanel();
        myPanelBtn.setLayout(new GridBagLayout());
        myPanelBtn.setBackground(new Color(-11551010));
        PanelBtns.add(myPanelBtn);
        adminBtn = new JButton();
        adminBtn.setBackground(new Color(-16758415));
        adminBtn.setBorderPainted(false);
        adminBtn.setContentAreaFilled(true);
        adminBtn.setFocusPainted(false);
        adminBtn.setFocusable(false);
        Font adminBtnFont = this.$$$getFont$$$("Lato", -1, 14, adminBtn.getFont());
        if (adminBtnFont != null) adminBtn.setFont(adminBtnFont);
        adminBtn.setForeground(new Color(-328966));
        adminBtn.setLabel("Admin");
        adminBtn.setMargin(new Insets(0, 0, 0, 0));
        adminBtn.setPreferredSize(new Dimension(130, 50));
        adminBtn.setRequestFocusEnabled(false);
        adminBtn.setText("Admin");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 0.5;
        gbc.insets = new Insets(0, 2, 0, 0);
        myPanelBtn.add(adminBtn, gbc);
        empBtn = new JButton();
        empBtn.setBackground(new Color(-16758415));
        empBtn.setBorderPainted(false);
        empBtn.setContentAreaFilled(true);
        empBtn.setFocusCycleRoot(true);
        empBtn.setFocusable(false);
        Font empBtnFont = this.$$$getFont$$$("Lato", -1, 14, empBtn.getFont());
        if (empBtnFont != null) empBtn.setFont(empBtnFont);
        empBtn.setForeground(new Color(-328966));
        empBtn.setLabel("Employee");
        empBtn.setMargin(new Insets(0, 0, 0, 0));
        empBtn.setPreferredSize(new Dimension(130, 50));
        empBtn.setRequestFocusEnabled(false);
        empBtn.setText("Employee");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.insets = new Insets(0, 2, 0, 0);
        myPanelBtn.add(empBtn, gbc);
        formPanel = new JPanel();
        formPanel.setLayout(new GridBagLayout());
        formPanel.setBackground(new Color(-1118482));
        formPanel.setForeground(new Color(-16758415));
        mainLoginPanel.add(formPanel, BorderLayout.CENTER);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(spacer1, gbc);
        LoginTextFieldUsername = new JTextField();
        LoginTextFieldUsername.setBackground(new Color(-1973791));
        LoginTextFieldUsername.setPreferredSize(new Dimension(140, 26));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(LoginTextFieldUsername, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Username");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label1, gbc);
        LoginTextFieldPassword = new JPasswordField();
        LoginTextFieldPassword.setBackground(new Color(-1973791));
        LoginTextFieldPassword.setPreferredSize(new Dimension(140, 26));
        LoginTextFieldPassword.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        formPanel.add(LoginTextFieldPassword, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Password");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        formPanel.add(label2, gbc);
        loggedinAsLabel = new JLabel();
        Font loggedinAsLabelFont = this.$$$getFont$$$("Lato", -1, 16, loggedinAsLabel.getFont());
        if (loggedinAsLabelFont != null) loggedinAsLabel.setFont(loggedinAsLabelFont);
        loggedinAsLabel.setText("Login as Administrator / Employee");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.ipady = 45;
        formPanel.add(loggedinAsLabel, gbc);
        LoginBtn = new JButton();
        LoginBtn.setBackground(new Color(-11551010));
        LoginBtn.setBorderPainted(false);
        LoginBtn.setContentAreaFilled(true);
        LoginBtn.setFocusable(false);
        Font LoginBtnFont = this.$$$getFont$$$("Lato", -1, 14, LoginBtn.getFont());
        if (LoginBtnFont != null) LoginBtn.setFont(LoginBtnFont);
        LoginBtn.setForeground(new Color(-328966));
        LoginBtn.setLabel("Login");
        LoginBtn.setMargin(new Insets(40, 0, 40, 0));
        LoginBtn.setPreferredSize(new Dimension(140, 35));
        LoginBtn.setRequestFocusEnabled(false);
        LoginBtn.setText("Login");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 3;
        gbc.insets = new Insets(30, 0, 0, 0);
        formPanel.add(LoginBtn, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        formPanel.add(spacer2, gbc);
        Footer = new JPanel();
        Footer.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 20));
        Footer.setBackground(new Color(-11551010));
        mainLoginPanel.add(Footer, BorderLayout.SOUTH);
        final JLabel label3 = new JLabel();
        label3.setBackground(new Color(-328966));
        label3.setForeground(new Color(-328966));
        label3.setText("Vehicle Renting System");
        Footer.add(label3);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainLoginPanel;
    }
}

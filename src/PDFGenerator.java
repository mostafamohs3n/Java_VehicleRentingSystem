package Code;

import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class PDFGenerator {
    private Date d = new Date();
    private String FILE = String.format("Ticket_%s_%d%d%d_%d%d.pdf", "Customer", d.getYear()+1900,d.getMonth()+1,d.getDate(),d.getHours(), d.getMinutes() );
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private Customer customer;
    private String Title;
    public PDFGenerator(String title, Customer c) {
        this.customer = c;
        this.Title = title;
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addTitlePage(document);
            addContent(document);
            addMetaData(document);
            document.close();
            System.out.println("ADDED FILE");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public static void main(String[] args) {
        Customer customer = new Customer(3, "Mostafa", 'M', "12 Ibrahim EL Bathy", new Date(),"010000213", "Taxi", 40, new Date() );
        new PDFGenerator("Karim Hamdy", customer);
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private void addMetaData(Document document) {
        document.addTitle(this.Title);
        document.addSubject("Ticket Generated by Vehicle Renting System for Customer "+this.customer.getName());
        document.addAuthor("Vehicle Renting System 2017");
        document.addCreator("Mostafa Mohsen, Karim Hamdy, Youssef Hatem, Menna Ahmed, Mai Eid, Sondos Salah");
    }

    private void addTitlePage(Document document)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph(this.Title, catFont));

        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Report generated by: " + "Vehicle Renting System " + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph(
                "We are placed  for Your Deal with us \n we hope to like Our Company \n This is Your Ticket and we hope Your Satisfy \n ",
                smallBold));


        createTable(preface);
        document.add(preface);


    }

    private static void addContent(Document document) throws DocumentException {

        Paragraph preface = new Paragraph();

    }

    private void createTable(Paragraph p)
            throws BadElementException {
        PdfPTable table = new PdfPTable(4);


        PdfPCell c1 = new PdfPCell(new Phrase("Name"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Vehicle"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Total Rent"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Book Date"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);



        table.addCell(customer.getName());
        table.addCell(customer.getRentedCar().getCarModel());
        table.addCell(String.format("%f",customer.getTotalRent()));
        table.addCell(String.format("%d%d%d",customer.getBookDate().getDate(), customer.getBookDate().getMonth(),customer.getBookDate().getYear()));


        p.add(table);

    }
    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}